! eufy IDs abrufen, Systemvariablen befüllen und Systemvariablen für Kameras und Zentralen erzeugen
! v3.0 - 20210109 [PhilippEngler]
string res;
string err;
string success;
string tempRes;
string tempDeviceID;
string tempDeviceType;
string centralDeviceIDs;
string centralDeviceID;
string cameraDeviceIDs;
string cameraDeviceID;
integer posStart;
integer posEnd;

! Geräte abrufen
system.Exec("curl --max-time 10 'http://127.0.0.1:52789/getDevices'", &res, &err);

! Erfolg oder nicht erfolg prüfen
posStart=res.Find("\"success\"");
posEnd=res.Length()-posStart;
success=res.Substr(posStart, posEnd);
posStart=success.Find(":")+1;
posEnd=success.Length()-posStart;
success=success.Substr(posStart, posEnd);
posEnd=success.Find(",");
if(posEnd==-1)
{
	posEnd=success.Find("}");
}
success=success.Substr(0,posEnd);
if(success=="true")
{
	
}
else
{
	quit;
}

! Geräte auflisten
posStart=res.Find("\"device_id\"");
tempRes=res;
while(posStart>=0)
{
	posEnd=tempRes.Length()-posStart;
	tempDeviceID=tempRes.Substr(posStart, posEnd);
	posStart=tempDeviceID.Find(":");
	posEnd=tempDeviceID.Length()-posStart;
	tempDeviceID=tempDeviceID.Substr(posStart, posEnd);
	tempRes=tempDeviceID;
	posStart=2;
	posEnd=tempDeviceID.Find(",")-posStart+1;
	tempDeviceID=tempDeviceID.Substr(posStart, posEnd);
	! DeviceType suchen
	posStart=tempRes.Find("\"device_type\"");
	posEnd=tempRes.Length()-posStart;
	tempDeviceType=tempRes.Substr(posStart, posEnd);
	posStart=tempDeviceType.Find(":");
	posEnd=tempDeviceType.Length()-posStart;
	tempDeviceType=tempDeviceType.Substr(posStart, posEnd);
	posStart=2;
	posEnd=tempDeviceType.Find(",")-posStart+1;
	tempDeviceType=tempDeviceType.Substr(posStart, posEnd);
	if(tempDeviceType=="camera")
	{
		if(cameraDeviceIDs.Length().ToInteger()==0)
		{
			cameraDeviceIDs=tempDeviceID;
		}
		else
		{
			cameraDeviceIDs=cameraDeviceIDs # "," # tempDeviceID;
		}
	}
	posStart=tempRes.Find("\"device_id\"");
}

! Basisstattionen abrufen
system.Exec("curl --max-time 10 'http://127.0.0.1:52789/getBases'", &res, &err);

! Erfolg oder nicht erfolg prüfen
posStart=res.Find("\"success\"");
posEnd=res.Length()-posStart;
success=res.Substr(posStart, posEnd);
posStart=success.Find(":")+1;
posEnd=success.Length()-posStart;
success=success.Substr(posStart, posEnd);
posEnd=success.Find(",");
if(posEnd==-1)
{
	posEnd=success.Find("}");
}
success=success.Substr(0,posEnd);
if(success=="true")
{
	
}
else
{
	quit;
}

! Basisstationen auflisten
posStart=res.Find("\"base_id\"");
tempRes=res;
while(posStart>=0)
{
	posEnd=tempRes.Length()-posStart;
	tempDeviceID=tempRes.Substr(posStart, posEnd);
	posStart=tempDeviceID.Find(":");
	posEnd=tempDeviceID.Length()-posStart;
	tempDeviceID=tempDeviceID.Substr(posStart, posEnd);
	tempRes=tempDeviceID;
	posStart=2;
	posEnd=tempDeviceID.Find(",")-posStart+1;
	tempDeviceID=tempDeviceID.Substr(posStart, posEnd);
	! DeviceType suchen
	posStart=tempRes.Find("\"device_type\"");
	posEnd=tempRes.Length()-posStart;
	tempDeviceType=tempRes.Substr(posStart, posEnd);
	posStart=tempDeviceType.Find(":");
	posEnd=tempDeviceType.Length()-posStart;
	tempDeviceType=tempDeviceType.Substr(posStart, posEnd);
	posStart=2;
	posEnd=tempDeviceType.Find(",")-posStart+1;
	tempDeviceType=tempDeviceType.Substr(posStart, posEnd);
	if(tempDeviceType=="basestation")
	{
		if(centralDeviceIDs.Length().ToInteger()==0)
		{
			centralDeviceIDs=tempDeviceID;
		}
		else
		{
			centralDeviceIDs=centralDeviceIDs # "," # tempDeviceID;
		}
	}
	posStart=tempRes.Find("\"base_id\"");
}

! Erzeugung der Systemvariablen für die Kameras
foreach(cameraDeviceID, cameraDeviceIDs.Split(","))
{
	! Systemvariable (Zeichenkette) für URL des Standbilds der Kamera
	string svName="eufyCameraImageURL" # cameraDeviceID;
	object svObj=dom.GetObject(svName);
	if(!svObj)
	{
		svObj = dom.CreateObject(OT_VARDP);
		dom.GetObject(ID_SYSTEM_VARIABLES).Add(svObj.ID());
		svObj.Name(svName);
		svObj.ValueType(ivtString);
		svObj.ValueSubType(istChar8859);
		svObj.DPInfo("Standbild der Kamera " # cameraDeviceID);
		svObj.ValueUnit("");
		svObj.DPArchive(false);
		svObj.State("???");
		svObj.Internal(false);
		svObj.Visible(true);
		dom.RTUpdate(false);
	}
	
	! Systemvariable (Zeichenkette) für Zeitpunkt des Videos der Kamera
	string svName="eufyCameraVideoTime" # cameraDeviceID;
	object svObj=dom.GetObject(svName);
	if(!svObj)
	{
		svObj = dom.CreateObject(OT_VARDP);
		dom.GetObject(ID_SYSTEM_VARIABLES).Add(svObj.ID());
		svObj.Name(svName);
		svObj.ValueType(ivtString);
		svObj.ValueSubType(istChar8859);
		svObj.DPInfo("Zeitpunkt des letzten Videos der Kamera " # cameraDeviceID);
		svObj.ValueUnit("");
		svObj.DPArchive(false);
		svObj.State("");
		svObj.Internal(false);
		svObj.Visible(true);
		dom.RTUpdate(false);
	}
	
	! Systemvariable (Zeichenkette) für URL des Videos der Kamera
	string svName="eufyCameraVideoURL" # cameraDeviceID;
	object svObj=dom.GetObject(svName);
	if(!svObj)
	{
		svObj = dom.CreateObject(OT_VARDP);
		dom.GetObject(ID_SYSTEM_VARIABLES).Add(svObj.ID());
		svObj.Name(svName);
		svObj.ValueType(ivtString);
		svObj.ValueSubType(istChar8859);
		svObj.DPInfo("letztes Video der Kamera " # cameraDeviceID);
		svObj.ValueUnit("");
		svObj.DPArchive(false);
		svObj.State("???");
		svObj.Internal(false);
		svObj.Visible(true);
		dom.RTUpdate(false);
	}
}

! Erzeugung der Systemvariablen für die Basisstationen
foreach(centralDeviceID, centralDeviceIDs.Split(","))
{
	! Systemvariable vom Typ Zeichenkette wird definiert und mit Startwert gefüllt
	string svName="eufyCentralState" # centralDeviceID;
	object svObj=dom.GetObject(svName);
	if(!svObj)
	{
		svObj = dom.CreateObject(OT_VARDP);
		dom.GetObject(ID_SYSTEM_VARIABLES).Add(svObj.ID());
		svObj.Name(svName);
		svObj.ValueType(ivtString);
		svObj.ValueSubType(istChar8859);
		svObj.DPInfo("aktueller Status der Basis " # centralDeviceID);
		svObj.ValueUnit("");
		svObj.DPArchive(false);
		svObj.State("???");
		svObj.Internal(false);
		svObj.Visible(true);
		dom.RTUpdate(false);
	}
}